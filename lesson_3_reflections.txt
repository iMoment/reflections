When would you want to use a remote repository rather than keeping all your work
local?

    Some common situations would be if I made changes directly on GitHub, or
    if I pushed changes to GitHub from another computer, or if there is
    another person working on the project who pushes to GitHub from another
    computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    For the same reason you wouldn't want Git to automatically push changes.
    Control and safety.  Some changes may not be bug free, or just concrete
    enough to work with existing files.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are created on a single repository.  Clones make a copy of a
    repository, either local or remote.  Forks are like clones, but works
    in GitHub's environment.  Cloning works on any repository.  I would use
    branches locally, forks when I would like content from other members of
    GitHub, and clones both remotely to get say, new files I had on GitHub when
    I worked on another computer, or my own local repository files.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    To be able to know whether your local commits are ahead of the state in the
    remote repository.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    If I didn't have Git or GitHub, I would have to collaborate using shared
    text editors while both me and other project members were simultaneously
    online, or exchange files through email if we had time conflicts.  I can't
    think of anything that would be easier, but many aspects of version control
    would be more difficult without the use of Git/GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
